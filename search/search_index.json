{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Torqueo is a simple and hackable library for experimentation with image warping in PyTorch. It is designed to facilitate easy manipulation and transformation of images using various warping techniques.</p>"},{"location":"#getting-started-with-torqueo","title":"\ud83d\ude80 Getting Started with Torqueo","text":"<p>Torqueo requires Python 3.7 or newer and several dependencies, including Numpy. Installation is straightforward with Pypi:</p> <pre><code>pip install torqueo\n</code></pre> <p>With Torqueo installed, you can dive into image warping. The API is designed to be intuitive, requiring only a few hyperparameters to get started.</p> <p>Example usage:</p> <pre><code>import torch\nimport timm\nfrom torqueo import Fisheye\n\ntransformed_images = Fisheye()(images)\n</code></pre> <p>Starter Notebook: </p>"},{"location":"#examples-of-transformations","title":"Examples of transformations","text":"<p>Below are some examples of image transformations using Torqueo.</p> Original Image Barrel Fisheye Perspective Pinch Spherize Stretch Swirl Twirl Wave"},{"location":"#authors-of-the-code","title":"Authors of the code","text":"<ul> <li>Vipul Sharma - vipul_sharma@brown.edu, Brown University</li> <li>Thomas Fel - thomas_fel@brown.edu, PhD Student DEEL (ANITI), Brown University</li> </ul>"},{"location":"reference/base/","title":"Documentation for Basic Warping Transform","text":""},{"location":"reference/base/#torqueo.base.WarpTransform","title":"WarpTransform","text":"<p>               Bases: <code>Module</code></p> <p>A base class for applying warp transformations to images using a grid sampling approach.</p> <p>This class provides the framework for implementing various warp transformations by defining a common interface. Subclasses should implement the <code>generate_warp_field</code> method to provide the specific warp grid for the transformation.</p>"},{"location":"reference/base/#torqueo.base.WarpTransform.forward","title":"forward","text":"<pre><code>forward(img)\n</code></pre> <p>Applies the warp transformation to the input image tensor.</p> <p>Parameters:</p> Name Type Description Default <code>img</code> <code>Tensor</code> <p>The input image tensor of shape (N, C, H, W).</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The warped image tensor.</p>"},{"location":"reference/base/#torqueo.base.WarpTransform.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the transformation.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"},{"location":"reference/base/#torqueo.base.WarpTransform.visualize_warp_field","title":"visualize_warp_field","text":"<pre><code>visualize_warp_field(height=1024, width=1024, padding=1, bg_color=1.0, grid_color=0.13)\n</code></pre> <p>Visualizes the warp field by creating an intermediate image with a grid and applying the warp transformation.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the intermediate image (default is 1024).</p> <code>1024</code> <code>width</code> <code>int</code> <p>The width of the intermediate image (default is 1024).</p> <code>1024</code> <code>padding</code> <code>int</code> <p>The padding around the grid lines (default is 1).</p> <code>1</code> <code>bg_color</code> <code>float</code> <p>The background color of the intermediate image (default is 1.0, white).</p> <code>1.0</code> <code>grid_color</code> <code>float</code> <p>The color of the grid lines (default is 0.13, dark gray).</p> <code>0.13</code>"},{"location":"reference/controller/","title":"Documentation for Warping Controller","text":""},{"location":"reference/controller/#torqueo.controller.WarpController","title":"WarpController","text":"<p>This class wraps the WarpTransform subclasses by making them an object of this class. The distortion levels are mapped to a given range of strengths for each warp to allow a common interface across all warping transformations.</p> <p>Parameters:</p> Name Type Description Default <code>warp_transform</code> <code>WarpTransform</code> <p>The particular warping class that we want a controller over. Example: Fisheye, Swirl.</p> required <code>max_distortion_level</code> <code>int</code> <p>The maximum distortion level possible for this warping controller. Should be &gt;= 0. When max_distortion_level is not passed with a range, the strength range is hard-coded and the max_distortion_level is used to determine how many samples to get from this range.</p> <code>10</code> <code>strength_range</code> <code>A tuple of floats or a tuple of ints</code> <p>The minimum/identity warping strength and the maximum warping strength for a transformation. We uniformly sample max_distortion_level+1 levels from this range.</p> <code>None</code> <p>Examples:</p> <pre><code>&gt;&gt;&gt; SwirlController = WarpController(Swirl, 5, (0, 1))\n&gt;&gt;&gt; swirl_transformer = SwirlController(1, radius=1)\n</code></pre> <p>The args following distortion_level need to be keyword arguments.</p>"},{"location":"reference/controller/#torqueo.controller.WarpController.__call__","title":"__call__","text":"<pre><code>__call__(distortion_level=0, **kwargs)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>distortion_level</code> <code>int</code> <p>The distortion effect from 0 to max_distortion_level. 0 for identify function, max_distortion_level for max distortion as defined in the mapping function.</p> <code>0</code> <p>Returns:</p> Type Description <code>WarpTransform</code> <p>The initialized object of WarpTransform with the given distortion level and keyword arguments.</p>"},{"location":"reference/plots/","title":"Documentation for Torqueo Plotting Utilities","text":""},{"location":"reference/plots/#torqueo.plots.check_format","title":"check_format","text":"<pre><code>check_format(arr)\n</code></pre> <p>Ensure numpy array and move channels to the last dimension if they are in the first dimension.</p>"},{"location":"reference/plots/#torqueo.plots.clip_percentile","title":"clip_percentile","text":"<pre><code>clip_percentile(img, percentile=0.1)\n</code></pre> <p>Clip pixel values to specified percentile range.</p>"},{"location":"reference/plots/#torqueo.plots.normalize","title":"normalize","text":"<pre><code>normalize(image)\n</code></pre> <p>Normalize image to 0-1 range.</p>"},{"location":"reference/plots/#torqueo.plots.show","title":"show","text":"<pre><code>show(img, norm=False, **kwargs)\n</code></pre> <p>Display image with normalization and channels in the last dimension.</p>"},{"location":"reference/plots/#torqueo.plots.to_numpy","title":"to_numpy","text":"<pre><code>to_numpy(tensor)\n</code></pre> <p>Ensure tensor is on CPU and convert to NumPy.</p>"},{"location":"reference/transforms/","title":"Documentation for all Available Warping Transformations","text":""},{"location":"reference/transforms/#torqueo.transforms.BarrelDistortion","title":"BarrelDistortion","text":"<p>               Bases: <code>WarpTransform</code></p> <p>Applies a barrel distortion effect by distorting the radial distance from the center using a polynomial approximation.</p> <p>Note: We use an an approximation of the polynomial radial distortion model to invert the original barrel formulas. see https://stackoverflow.com/questions/6199636/formulas-for-barrel-pincushion-distortion</p> Transformation <pre><code>r' = r * (1 + strength * r^2)\nx' = r' * cos(theta)\ny' = r' * sin(theta)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the barrel distortion effect.</p> <code>0.5</code>"},{"location":"reference/transforms/#torqueo.transforms.BarrelDistortion.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the barrel distortion.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"},{"location":"reference/transforms/#torqueo.transforms.Bulge","title":"Bulge","text":"<p>               Bases: <code>WarpTransform</code></p> <p>Applies a bulge distortion effect by radially distorting the coordinates outward.</p> Transformation <pre><code>r' = r^strength\nx' = r' * cos(theta)\ny' = r' * sin(theta)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the bulge distortion effect. Must be greater than or equal to 1.0.</p> <code>1.0</code>"},{"location":"reference/transforms/#torqueo.transforms.Bulge.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the bulge distortion.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"},{"location":"reference/transforms/#torqueo.transforms.Compression","title":"Compression","text":"<p>               Bases: <code>Stretching</code></p> <p>Applies a compression effect along the specified axis.</p> Transformation <pre><code>x' = x * (1 + strength)  (if axis = 'horizontal')\ny' = y * (1 + strength)  (if axis = 'vertical')\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the stretching effect. Should be &gt;=0.</p> <code>0.5</code> <code>axis</code> <code>str</code> <p>The axis along which to apply the stretching effect ('horizontal' or 'vertical').</p> <code>'horizontal'</code>"},{"location":"reference/transforms/#torqueo.transforms.Fisheye","title":"Fisheye","text":"<p>               Bases: <code>WarpTransform</code></p> <p>Applies a fisheye distortion effect by stretching the magnitude of the coordinates based on a power function.</p> Transformation <p><pre><code>r' = r^{1 + strength}\nx' = r' cos(theta)\ny' = r' sin(theta)\n</code></pre> where r and theta are the polar form coordinate of x,y and k the strength.</p> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the distorsion. Identity function for strenght = 0.0.</p> <code>0.5</code>"},{"location":"reference/transforms/#torqueo.transforms.Fisheye.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the fisheye distortion.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"},{"location":"reference/transforms/#torqueo.transforms.Implosion","title":"Implosion","text":"<p>               Bases: <code>Bulge</code></p> <p>Applies an implosion distortion effect by radially distorting the coordinates inward.</p> Transformation <pre><code>r' = r^strength\nx' = r' * cos(theta)\ny' = r' * sin(theta)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the implosion distortion effect. Must be between 0.0 and 1.0.</p> <code>0.5</code>"},{"location":"reference/transforms/#torqueo.transforms.Perspective","title":"Perspective","text":"<p>               Bases: <code>WarpTransform</code></p>"},{"location":"reference/transforms/#torqueo.transforms.Perspective--pylint-disablec0301","title":"pylint: disable=C0301","text":"<p>Applies a random perspective wrap as defined here: https://pytorch.org/vision/main/_modules/torchvision/transforms/transforms.html#RandomPerspective https://pytorch.org/vision/main/_modules/torchvision/transforms/functional.html#perspective</p> Transformation <p>Picks random end points for perspective warp and uses current corners as start points to generate the warping matrix. Given the warping coefficients (a, b, c, d, e, f, g, h) we have the following association: <pre><code>x' = (ax + by + c) / (gx + hy + 1)\ny' = (dx + ey + f) / (gx + hy + 1)\n</code></pre></p> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the perspective distortion effect.</p> <code>0.5</code>"},{"location":"reference/transforms/#torqueo.transforms.Perspective.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the shear distortion.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"},{"location":"reference/transforms/#torqueo.transforms.Pinch","title":"Pinch","text":"<p>               Bases: <code>WarpTransform</code></p> <p>Applies a pinch distortion effect by pinching it towards the user.</p> Transformation <pre><code>pinch_factor = sin(pi/2 * r)^(-strength)\nx' = x' * pinch_factor\ny' = y' * pinch_factor\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the pinch distortion effect. Must be between 0.0 and 1.0.</p> <code>0.5</code>"},{"location":"reference/transforms/#torqueo.transforms.Pinch.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the pinch distortion.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"},{"location":"reference/transforms/#torqueo.transforms.Pincushion","title":"Pincushion","text":"<p>               Bases: <code>BarrelDistortion</code></p> <p>Applies a pincushion distortion effect, which is the inverse of barrel distortion.</p> Transformation <pre><code>r' = r * (1 - strength * r^2)\nx' = r' * cos(theta)\ny' = r' * sin(theta)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the pincushion distortion effect.</p> <code>0.5</code>"},{"location":"reference/transforms/#torqueo.transforms.Punch","title":"Punch","text":"<p>               Bases: <code>Pinch</code></p> <p>Applies a punch distortion effect which is opposite of pinch and pushes image away from the user.</p> Transformation <pre><code>punch_factor = sin(pi/2 * r)^(strength)\nx' = x' * punch_factor\ny' = y' * punch_factor\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the punch distortion effect. Must be between 0.0 and 1.0.</p> <code>0.5</code>"},{"location":"reference/transforms/#torqueo.transforms.Shear","title":"Shear","text":"<p>               Bases: <code>WarpTransform</code></p> <p>Applies a shear distortion effect. Implemented as defined here: https://en.wikipedia.org/wiki/Shear_mapping</p> Transformation <pre><code>x' = x + strength*y (if axis = 'horizontal')\ny' = strength*x + y (if axis = 'vertical')\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the shear distortion effect. Also defined as the cotangent of the shear angle. Positive for right/top leaning, negative for left/bottom leaning shear.</p> <code>0.5</code> <code>axis</code> <p>The axis along which to apply the shearing effect ('horizontal' or 'vertical').</p> <code>'horizontal'</code>"},{"location":"reference/transforms/#torqueo.transforms.Shear.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the shear distortion.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"},{"location":"reference/transforms/#torqueo.transforms.Spherize","title":"Spherize","text":"<p>               Bases: <code>WarpTransform</code></p> <p>Applies a spherical distortion effect by mapping the coordinates onto a sphere.</p> Transformation <pre><code>r' = sin(r * strength * pi/2) / (strength * pi/2)\nx' = r' * cos(theta)\ny' = r' * sin(theta)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the spherical distortion effect.</p> <code>0.5</code>"},{"location":"reference/transforms/#torqueo.transforms.Spherize.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the spherize distortion.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"},{"location":"reference/transforms/#torqueo.transforms.Stretching","title":"Stretching","text":"<p>               Bases: <code>WarpTransform</code></p> <p>Applies a stretching effect along the specified axis.</p> Transformation <pre><code>x' = x * (1 - strength)  (if axis = 'horizontal')\ny' = y * (1 - strength)  (if axis = 'vertical')\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the stretching effect.</p> <code>0.5</code> <code>axis</code> <code>str</code> <p>The axis along which to apply the stretching effect ('horizontal' or 'vertical').</p> <code>'horizontal'</code>"},{"location":"reference/transforms/#torqueo.transforms.Stretching.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the stretching distortion.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"},{"location":"reference/transforms/#torqueo.transforms.Swirl","title":"Swirl","text":"<p>               Bases: <code>WarpTransform</code></p> <p>Applies a swirl distortion effect by rotating the coordinates around the center based on their radial distance from the center.</p> Transformation <pre><code>theta' = theta + (radius - r) * strength\nx' = r' * cos(theta')\ny' = r' * sin(theta')\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the swirl effect. Higher values result in a stronger swirl.</p> <code>1.0</code> <code>radius</code> <code>float</code> <p>The maximum distance from the center where the swirl effect is applied.</p> <code>1.0</code>"},{"location":"reference/transforms/#torqueo.transforms.Swirl.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the swirl distortion.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"},{"location":"reference/transforms/#torqueo.transforms.Twirl","title":"Twirl","text":"<p>               Bases: <code>WarpTransform</code></p> <p>Applies a twirl distortion effect by rotating the coordinates around the center with an angle proportional to their radial distance from the center.</p> Transformation <pre><code>theta' = theta + strength * r\nx' = r * cos(theta')\ny' = r * sin(theta')\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the twirl effect.</p> <code>0.5</code>"},{"location":"reference/transforms/#torqueo.transforms.Twirl.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the twirl distortion.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"},{"location":"reference/transforms/#torqueo.transforms.Wave","title":"Wave","text":"<p>               Bases: <code>WarpTransform</code></p> <p>Applies a wave distortion effect along the specified axis.</p> Transformation <pre><code>y' = y + strength * amplitude * sin(2 * pi * frequency * x + phase)  (if axis = 'horizontal')\nx' = x + strength * amplitude * sin(2 * pi * frequency * y + phase)  (if axis = 'vertical')\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>strength</code> <code>float</code> <p>The strength of the distortion as defined by the scaling of the amplitude.</p> <code>1</code> <code>amplitude</code> <code>float</code> <p>The amplitude of the wave.</p> <code>0.1</code> <code>frequency</code> <code>float</code> <p>The frequency of the wave.</p> <code>1.0</code> <code>phase</code> <code>float</code> <p>The phase shift of the wave.</p> <code>0.0</code> <code>axis</code> <code>str</code> <p>The axis along which to apply the wave effect ('horizontal' or 'vertical').</p> <code>'horizontal'</code>"},{"location":"reference/transforms/#torqueo.transforms.Wave.generate_warp_field","title":"generate_warp_field","text":"<pre><code>generate_warp_field(height, width)\n</code></pre> <p>Generates the warp field for the wave distortion.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>int</code> <p>The height of the image.</p> required <code>width</code> <code>int</code> <p>The width of the image.</p> required <p>Returns:</p> Type Description <code>Tensor</code> <p>The grid for warping the image.</p>"}]}